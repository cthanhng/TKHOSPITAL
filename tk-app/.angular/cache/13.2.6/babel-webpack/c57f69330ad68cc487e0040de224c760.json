{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Web_advance\\\\Project\\\\TKHOSPITAL\\\\tk-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet VirtualDocComponent = class VirtualDocComponent {\n  constructor(_formbuilder, _router, _service) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._service = _service; // virtualForm1 =[{\n    //   id: 1,\n    //   type: '12345',\n    //   connect: \"cc\"\n    // },{\n    //   id: 2,\n    //   type: '12345'\n    // }]\n\n    this.patientSchedule = {\n      BookingID: '',\n      Doctor: '',\n      Department: '',\n      PatientName: '',\n      BookingType: '',\n      Confirmation: '',\n      Phone: '',\n      Email: '',\n      District: '',\n      Platform: '',\n      Date: '',\n      Time: '',\n      ConnectingWay: '',\n      TypeOfVisit: ''\n    };\n    this.BookingID = \"02\";\n    this.virtualForm = this._formbuilder.group({\n      type: ['', [Validators.required]],\n      connect: ['', [Validators.required]],\n      place: ['', [Validators.required]],\n      district: ['', [Validators.required]],\n      date: ['', [Validators.required]],\n      time: ['', [Validators.required]]\n    });\n  }\n\n  ngOnInit() {\n    this.getSchedule();\n  }\n\n  getSchedule() {\n    this._service.getAllSchedule().subscribe({\n      next: data => this.virtual = data,\n      error: err => this.errMsg = err\n    });\n  }\n\n  onSubmit(data) {\n    const virtualForm = new FormData();\n    virtualForm.append(\"type\", data.type);\n    virtualForm.append(\"connect\", data.connect);\n    virtualForm.append(\"place\", data.place);\n    virtualForm.append(\"district\", data.district);\n    virtualForm.append(\"date\", data.date);\n    virtualForm.append(\"time\", data.time);\n    console.log(\"FormData: \", virtualForm);\n\n    this._service.post(virtualForm).subscribe({\n      next: res => {\n        console.log(\"Success!!\");\n        this.getSchedule();\n      },\n      error: err => {\n        console.log(\"Error: \", err.message);\n      }\n    }); // formData.append(\"file\" , this.file)\n    // console.log(\"FormData: \", formData)\n    // for(let pair of formData.entries()){\n    //   console.log(pair[0], pair[1]) //[0]:key [1]:value\n    // }\n\n  }\n\n  onSubmit1() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this._service.post(_this.patientSchedule).subscribe();\n      alert('Success');\n    })();\n  }\n\n  get typeInput() {\n    return this.virtualForm.controls[\"type\"];\n  }\n\n  get connectInput() {\n    return this.virtualForm.controls[\"connect\"];\n  }\n\n  get placeInput() {\n    return this.virtualForm.controls[\"place\"];\n  }\n\n  get districtInput() {\n    return this.virtualForm.controls[\"district\"];\n  }\n\n  get dateInput() {\n    return this.virtualForm.controls[\"date\"];\n  }\n\n  get timeInput() {\n    return this.virtualForm.controls[\"time\"];\n  }\n\n};\nVirtualDocComponent = __decorate([Component({\n  selector: 'app-virtual-doc',\n  templateUrl: './virtual-doc.component.html',\n  styleUrls: ['./virtual-doc.component.css']\n})], VirtualDocComponent);\nexport { VirtualDocComponent };","map":{"version":3,"sources":["D:/Web_advance/Project/TKHOSPITAL/tk-app/src/app/virtual-doc/virtual-doc.component.ts"],"names":["__decorate","Component","Validators","VirtualDocComponent","constructor","_formbuilder","_router","_service","patientSchedule","BookingID","Doctor","Department","PatientName","BookingType","Confirmation","Phone","Email","District","Platform","Date","Time","ConnectingWay","TypeOfVisit","virtualForm","group","type","required","connect","place","district","date","time","ngOnInit","getSchedule","getAllSchedule","subscribe","next","data","virtual","error","err","errMsg","onSubmit","FormData","append","console","log","post","res","message","onSubmit1","alert","typeInput","controls","connectInput","placeInput","districtInput","dateInput","timeInput","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nlet VirtualDocComponent = class VirtualDocComponent {\r\n    constructor(_formbuilder, _router, _service) {\r\n        this._formbuilder = _formbuilder;\r\n        this._router = _router;\r\n        this._service = _service;\r\n        // virtualForm1 =[{\r\n        //   id: 1,\r\n        //   type: '12345',\r\n        //   connect: \"cc\"\r\n        // },{\r\n        //   id: 2,\r\n        //   type: '12345'\r\n        // }]\r\n        this.patientSchedule = {\r\n            BookingID: '',\r\n            Doctor: '',\r\n            Department: '',\r\n            PatientName: '',\r\n            BookingType: '',\r\n            Confirmation: '',\r\n            Phone: '',\r\n            Email: '',\r\n            District: '',\r\n            Platform: '',\r\n            Date: '',\r\n            Time: '',\r\n            ConnectingWay: '',\r\n            TypeOfVisit: '',\r\n        };\r\n        this.BookingID = \"02\";\r\n        this.virtualForm = this._formbuilder.group({\r\n            type: ['', [Validators.required]],\r\n            connect: ['', [Validators.required]],\r\n            place: ['', [Validators.required]],\r\n            district: ['', [Validators.required]],\r\n            date: ['', [Validators.required]],\r\n            time: ['', [Validators.required]]\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.getSchedule();\r\n    }\r\n    getSchedule() {\r\n        this._service.getAllSchedule().subscribe({\r\n            next: data => this.virtual = data,\r\n            error: err => this.errMsg = err\r\n        });\r\n    }\r\n    onSubmit(data) {\r\n        const virtualForm = new FormData();\r\n        virtualForm.append(\"type\", data.type);\r\n        virtualForm.append(\"connect\", data.connect);\r\n        virtualForm.append(\"place\", data.place);\r\n        virtualForm.append(\"district\", data.district);\r\n        virtualForm.append(\"date\", data.date);\r\n        virtualForm.append(\"time\", data.time);\r\n        console.log(\"FormData: \", virtualForm);\r\n        this._service.post(virtualForm).subscribe({\r\n            next: res => {\r\n                console.log(\"Success!!\");\r\n                this.getSchedule();\r\n            },\r\n            error: err => {\r\n                console.log(\"Error: \", err.message);\r\n            }\r\n        });\r\n        // formData.append(\"file\" , this.file)\r\n        // console.log(\"FormData: \", formData)\r\n        // for(let pair of formData.entries()){\r\n        //   console.log(pair[0], pair[1]) //[0]:key [1]:value\r\n        // }\r\n    }\r\n    async onSubmit1() {\r\n        await this._service.post(this.patientSchedule).subscribe();\r\n        alert('Success');\r\n    }\r\n    get typeInput() {\r\n        return this.virtualForm.controls[\"type\"];\r\n    }\r\n    get connectInput() {\r\n        return this.virtualForm.controls[\"connect\"];\r\n    }\r\n    get placeInput() {\r\n        return this.virtualForm.controls[\"place\"];\r\n    }\r\n    get districtInput() {\r\n        return this.virtualForm.controls[\"district\"];\r\n    }\r\n    get dateInput() {\r\n        return this.virtualForm.controls[\"date\"];\r\n    }\r\n    get timeInput() {\r\n        return this.virtualForm.controls[\"time\"];\r\n    }\r\n};\r\nVirtualDocComponent = __decorate([\r\n    Component({\r\n        selector: 'app-virtual-doc',\r\n        templateUrl: './virtual-doc.component.html',\r\n        styleUrls: ['./virtual-doc.component.css']\r\n    })\r\n], VirtualDocComponent);\r\nexport { VirtualDocComponent };\r\n"]},"metadata":{},"sourceType":"module"}